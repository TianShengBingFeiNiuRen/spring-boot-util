
#user  nobody;	# 运行用户，默认即是nginx，可以不进行设置
worker_processes  4;	# Nginx 进程数，一般设置为和 CPU 核数一样

#error_log  logs/error.log;	# Nginx 的错误日志存放目录
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;	# Nginx 服务启动时的 pid 存放位置


events {
    worker_connections  1024;	# 每个进程允许最大并发数
}


http {
    include       mime.types;	# 文件扩展名与类型映射表
    default_type  application/octet-stream;	# 默认文件类型

    # 设置日志模式
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;	# Nginx访问日志存放位置

    sendfile        on;	# 开启高效传输模式
    #tcp_nopush     on;	# 减少网络报文段的数量

    #keepalive_timeout  0;
    keepalive_timeout  65;	# 保持连接的时间，也叫超时时间，单位秒

    #gzip  on;
    
    upstream open-api {
	server 172.28.78.137:9901; # 负载均衡
	server 172.28.78.137:9902;
	server 172.28.78.137:9903 weight=10;	# weight 方式，不写默认为 1
    }
    server {
        listen       80;	# 配置监听的端口
        server_name  localhost; # 配置的域名

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;	# 网站根目录
            index  index.html index.htm;	# 默认首页文件
        }

        location /stock {
            proxy_pass   http://172.28.78.137;	# 反向代理
        }

        location /open-api {
            proxy_pass   http://open-api;  # 负载均衡，与upstream对应
        }

        proxy_set_header X-Real-IP $remote_addr; # 反向代理时设置请求头真实ip
        proxy_set_header X-Real-Port $remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;	# 默认50x对应的访问页面
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
